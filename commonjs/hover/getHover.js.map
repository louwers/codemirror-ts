{"version":3,"file":"getHover.js","sourceRoot":"","sources":["../../../src/hover/getHover.ts"],"names":[],"mappings":";;;AAcA,SAAgB,QAAQ,CAAC,EACvB,GAAG,EACH,IAAI,EACJ,GAAG,GAKJ;IACC,MAAM,SAAS,GAAG,GAAG,CAAC;IACtB,IAAI,SAAS,KAAK,IAAI;QAAE,OAAO,IAAI,CAAC;IAEpC,MAAM,SAAS,GAAG,GAAG,CAAC,eAAe,CAAC,sBAAsB,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;IAC9E,IAAI,CAAC,SAAS;QAAE,OAAO,IAAI,CAAC;IAE5B,MAAM,KAAK,GAAG,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC;IAEvC,MAAM,OAAO,GACX,GAAG,CAAC,eAAe,CAAC,2BAA2B,CAAC,IAAI,EAAE,SAAS,CAAC;QAChE,GAAG,CAAC,eAAe,CAAC,uBAAuB,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;IAE/D,OAAO;QACL,KAAK;QACL,GAAG,EAAE,KAAK,GAAG,SAAS,CAAC,QAAQ,CAAC,MAAM;QACtC,OAAO;QACP,SAAS;KACV,CAAC;AACJ,CAAC;AA3BD,4BA2BC","sourcesContent":["import { type QuickInfo, type DefinitionInfo } from \"typescript\";\nimport { VirtualTypeScriptEnvironment } from \"@typescript/vfs\";\n\n/**\n * This information is passed to the API consumer to allow\n * them to create tooltips however they wish.\n */\nexport interface HoverInfo {\n  start: number;\n  end: number;\n  typeDef: readonly DefinitionInfo[] | undefined;\n  quickInfo: QuickInfo | undefined;\n}\n\nexport function getHover({\n  env,\n  path,\n  pos,\n}: {\n  env: VirtualTypeScriptEnvironment;\n  path: string;\n  pos: number;\n}): HoverInfo | null {\n  const sourcePos = pos;\n  if (sourcePos === null) return null;\n\n  const quickInfo = env.languageService.getQuickInfoAtPosition(path, sourcePos);\n  if (!quickInfo) return null;\n\n  const start = quickInfo.textSpan.start;\n\n  const typeDef =\n    env.languageService.getTypeDefinitionAtPosition(path, sourcePos) ??\n    env.languageService.getDefinitionAtPosition(path, sourcePos);\n\n  return {\n    start,\n    end: start + quickInfo.textSpan.length,\n    typeDef,\n    quickInfo,\n  };\n}\n"]}