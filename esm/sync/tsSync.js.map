{"version":3,"file":"tsSync.js","sourceRoot":"","sources":["../../../src/sync/tsSync.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,UAAU,EAAE,MAAM,kBAAkB,CAAC;AAC9C,OAAO,EAAE,kBAAkB,EAAE,MAAM,aAAa,CAAC;AAEjD;;;;;GAKG;AACH,MAAM,UAAU,MAAM,CAAC,EACrB,GAAG,EACH,IAAI,GAIL;IACC,2DAA2D;IAC3D,4DAA4D;IAC5D,iEAAiE;IACjE,6DAA6D;IAC7D,8DAA8D;IAC9D,8CAA8C;IAC9C,IAAI,KAAK,GAAG,IAAI,CAAC;IACjB,OAAO,UAAU,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,MAAM,EAAE,EAAE;QAC7C,IAAI,CAAC,MAAM,CAAC,UAAU,IAAI,CAAC,KAAK;YAAE,OAAO;QACzC,KAAK,GAAG,KAAK,CAAC;QACd,kBAAkB,CAAC,GAAG,EAAE,IAAI,EAAE,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC;IAC7D,CAAC,CAAC,CAAC;AACL,CAAC","sourcesContent":["import { VirtualTypeScriptEnvironment } from \"@typescript/vfs\";\nimport { EditorView } from \"@codemirror/view\";\nimport { createOrUpdateFile } from \"./update.js\";\n\n/**\n * Sync updates from CodeMirror to the TypeScript\n * virtual environment. Note that this updates a file - it isn't\n * responsible (yet) for deleting or renaming files if they\n * do get deleted or renamed.\n */\nexport function tsSync({\n  env,\n  path,\n}: {\n  env: VirtualTypeScriptEnvironment;\n  path: string;\n}) {\n  // TODO: this is a weak solution to the cold start problem.\n  // If you boot up a CodeMirror instance, we want the initial\n  // value to get loaded into CodeMirror. We do get a change event,\n  // but it surprisingly doesn't have `docChanged: true` on it,\n  // so this is a rough heuristic to just accept the first event\n  // regardless of whether it looks significant.\n  let first = true;\n  return EditorView.updateListener.of((update) => {\n    if (!update.docChanged && !first) return;\n    first = false;\n    createOrUpdateFile(env, path, update.state.doc.toString());\n  });\n}\n"]}